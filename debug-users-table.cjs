const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Variables d\'environnement manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function debugUsersTable() {
  console.log('üîç D√©bogage de la table users...\n');

  try {
    // Lister tous les utilisateurs
    const { data: users, error } = await supabase
      .from('users')
      .select('*');

    if (error) {
      console.error('‚ùå Erreur r√©cup√©ration users:', error.message);
      return;
    }

    console.log(`üìã ${users.length} utilisateurs trouv√©s dans la table users:`);
    users.forEach((user, index) => {
      console.log(`\n${index + 1}. ID: ${user.id}`);
      console.log(`   Email: ${user.email}`);
      console.log(`   Nom: ${user.full_name}`);
      console.log(`   R√¥le: ${user.role}`);
      console.log(`   T√©l√©phone: ${user.phone || 'Non renseign√©'}`);
      console.log(`   Commune ID: ${user.commune_id || 'Non renseign√©'}`);
    });

    // V√©rifier l'utilisateur citoyen sp√©cifique
    console.log('\nüîç Recherche sp√©cifique de l\'utilisateur citoyen...');
    const { data: citizenUser, error: citizenError } = await supabase
      .from('users')
      .select('*')
      .eq('email', 'citoyen@kinshasa-alerte.rdc');

    if (citizenError) {
      console.error('‚ùå Erreur recherche citoyen:', citizenError.message);
    } else {
      console.log(`üìã ${citizenUser.length} entr√©es trouv√©es pour citoyen@kinshasa-alerte.rdc:`);
      citizenUser.forEach((user, index) => {
        console.log(`\n${index + 1}. ID: ${user.id}`);
        console.log(`   Email: ${user.email}`);
        console.log(`   Nom: ${user.full_name}`);
        console.log(`   R√¥le: ${user.role}`);
      });
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
  }
}

debugUsersTable(); 