import { createClient } from '@supabase/supabase-js'
import dotenv from 'dotenv'

// Charger les variables d'environnement
dotenv.config()

const supabaseUrl = process.env.VITE_SUPABASE_URL
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNrb3JkbnlpdGd2cnRpb3V3ZGF6Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1MzcxODc2MCwiZXhwIjoyMDY5Mjk0NzYwfQ.Yn3Bye8lMlqAuRsh0entx73CnRnT3a3aTYYYZdzxsfU'

if (!supabaseUrl) {
  console.error('‚ùå VITE_SUPABASE_URL manquant dans .env')
  process.exit(1)
}

// Cr√©er le client Supabase avec la cl√© de service
const supabase = createClient(supabaseUrl, supabaseServiceKey)

// Comptes de test √† cr√©er
const TEST_ACCOUNTS = [
  {
    email: 'admin@kinshasa-alerte.rdc',
    password: 'admin123456',
    full_name: 'Administrateur Principal',
    role: 'admin'
  },
  {
    email: 'bourgmestre.gombe@kinshasa-alerte.rdc',
    password: 'bourg123456',
    full_name: 'Bourgmestre de Gombe',
    role: 'bourgmestre',
    commune_name: 'Gombe'
  },
  {
    email: 'citoyen@kinshasa-alerte.rdc',
    password: 'citoyen123456',
    full_name: 'Citoyen Test',
    role: 'citizen'
  }
]

async function createAuthUser(account) {
  try {
    console.log(`üë§ Cr√©ation du compte ${account.email}...`)
    
    // Cr√©er l'utilisateur dans l'authentification Supabase
    const { data: authData, error: authError } = await supabase.auth.admin.createUser({
      email: account.email,
      password: account.password,
      email_confirm: true, // Confirmer automatiquement l'email
      user_metadata: {
        full_name: account.full_name,
        role: account.role
      }
    })

    if (authError) {
      console.error(`‚ùå Erreur cr√©ation auth pour ${account.email}:`, authError.message)
      return null
    }

    console.log(`‚úÖ Compte auth cr√©√© pour ${account.email}`)
    return authData.user
  } catch (error) {
    console.error(`‚ùå Erreur cr√©ation auth pour ${account.email}:`, error.message)
    return null
  }
}

async function updateUserProfile(authUser, account) {
  try {
    // R√©cup√©rer l'ID de la commune si n√©cessaire
    let commune_id = null
    if (account.commune_name) {
      const { data: commune } = await supabase
        .from('communes')
        .select('id')
        .eq('name', account.commune_name)
        .single()
      
      if (commune) {
        commune_id = commune.id
      }
    }

    // Mettre √† jour ou cr√©er le profil utilisateur dans la table users
    const { data, error } = await supabase
      .from('users')
      .upsert({
        id: authUser.id,
        email: account.email,
        full_name: account.full_name,
        role: account.role,
        commune_id: commune_id
      }, {
        onConflict: 'id'
      })

    if (error) {
      console.error(`‚ùå Erreur mise √† jour profil pour ${account.email}:`, error.message)
      return false
    }

    console.log(`‚úÖ Profil mis √† jour pour ${account.email}`)
    return true
  } catch (error) {
    console.error(`‚ùå Erreur mise √† jour profil pour ${account.email}:`, error.message)
    return false
  }
}

async function main() {
  console.log('üöÄ Cr√©ation des comptes d\'authentification Supabase')
  console.log('=' .repeat(60))
  
  for (const account of TEST_ACCOUNTS) {
    console.log(`\nüìß Traitement de ${account.email}...`)
    
    // Cr√©er le compte d'authentification
    const authUser = await createAuthUser(account)
    
    if (authUser) {
      // Mettre √† jour le profil utilisateur
      await updateUserProfile(authUser, account)
    }
  }
  
  console.log('\nüéâ Cr√©ation des comptes termin√©e !')
  console.log('\nüìã Comptes cr√©√©s :')
  console.log('üë®‚Äçüíº Admin: admin@kinshasa-alerte.rdc / admin123456')
  console.log('üèõÔ∏è  Bourgmestre: bourgmestre.gombe@kinshasa-alerte.rdc / bourg123456')
  console.log('üë§ Citoyen: citoyen@kinshasa-alerte.rdc / citoyen123456')
  
  console.log('\nüîê Instructions de connexion :')
  console.log('1. Allez sur http://localhost:8080/auth')
  console.log('2. Utilisez les emails et mots de passe ci-dessus')
  console.log('3. Vous devriez pouvoir vous connecter normalement')
  
  console.log('\nüéØ Test des r√¥les :')
  console.log('- Admin: Acc√®s √† /admin')
  console.log('- Bourgmestre: Acc√®s √† /bourgmestre')
  console.log('- Citoyen: Acc√®s √† /signaler')
}

main().catch(console.error) 